LAMP Install Notes 20161019 2016.293
Copyright Â© 2014, 2015, 2016, William N. Braswell, Jr.. All Rights Reserved. This work is Free & Open Source; you can redistribute it and/or modify it under the same terms as Perl 5.24.0.

Tested Using:
Fresh Xubuntu v14.04.2 (Trusty Tahr)
Fresh  Ubuntu v14.04.1 (Trusty Tahr) from CloudAtCost.com or HostGator.com
Fresh  Ubuntu v14.04   (Trusty Tahr) in Virtual Box
Fresh Xubuntu v16.04.1 (Xenial Xerus)

# [[[ UNINDENT ]]]
:%s/^\ \ \ \ //g


# [[[ APACHE, CONFIGURE DOMAIN(S) ]]]
$ vi /etc/apache2/apache2.conf
    # WBRASWELL XYZZY: fix "Could not reliably determine the server's fully qualified domain name"
    ServerName localhost

    <IfModule mpm_prefork_module>  #IGNORE THIS SECTION??? not present in Ubuntu v14.04.pre
        StartServers          2  # 5 in Ubuntu v12.04.4
        MinSpareServers       5
        MaxSpareServers      10
        MaxClients          150
        MaxRequestsPerChild   3000  # 0 in Ubuntu v12.04.4
    </IfModule>
$ vi /etc/apache2/sites-available/SOMEDOMAIN.COM.conf  # repeat for each enabled domain & subdomain
    # DOMAIN
    <VirtualHost *:80>
        ServerName SOMEDOMAIN.COM
        ServerAlias www.SOMEDOMAIN.COM
        ServerAdmin webmaster@SOMEDOMAIN.COM
        DocumentRoot /srv/www/SOMEDOMAIN.COM/public_html/
        <Directory />  # required for Apache v2.4 in Ubuntu v14.04.pre
            Require all granted
        </Directory>
        # Google Webmaster Tools, Robots Testing Tool 
        Alias    /googleSOMELONGNUMBER.html    /home/SOMEBODY/public_html/SOMEDOMAIN.COM-latest/root/googleSOMELONGNUMBER.html
        ErrorLog /srv/www/SOMEDOMAIN.COM/logs/error.log
        CustomLog /srv/www/SOMEDOMAIN.COM/logs/access.log combined
    </VirtualHost>
        # OR
    # SUBDOMAIN
    <VirtualHost *:80>
        ServerName SUBDOMAIN.SOMEDOMAIN.COM
        ServerAlias SUBDOMAIN.SOMEDOMAIN.COM *.SOMEDOMAIN.COM  # DISABLE IF ALSO USING PHPMYADMIN.SUBDOMAIN.SOMEDOMAIN.COM
        ServerAdmin webmaster@SUBDOMAIN.SOMEDOMAIN.COM
        DocumentRoot /srv/www/SUBDOMAIN.SOMEDOMAIN.COM/public_html/
        <Directory />  # required for Apache v2.4 in Ubuntu v14.04.pre
            Require all granted
        </Directory>
        # Google Webmaster Tools, Robots Testing Tool 
        Alias    /googleSOMELONGNUMBER.html    /home/SOMEBODY/public_html/SUBDOMAIN.SOMEDOMAIN.COM-latest/root/googleSOMELONGNUMBER.html
        ErrorLog /srv/www/SUBDOMAIN.SOMEDOMAIN.COM/logs/error.log
        CustomLog /srv/www/SUBDOMAIN.SOMEDOMAIN.COM/logs/access.log combined
    </VirtualHost>
# if using subdomain, then replace SOMEDOMAIN.COM with SUBDOMAIN.SOMEDOMAIN.COM in remaining Apache commands below
$ mkdir -p /srv/www/SOMEDOMAIN.COM/public_html
$ mkdir /srv/www/SOMEDOMAIN.COM/logs
$ vi /srv/www/SOMEDOMAIN.COM/public_html/index.html  # create test page
    SOMEDOMAIN.COM lives!
$ a2dissite 000-default # skip to allow default placeholder "It Works" page, required in Ubuntu v14.04.pre?  
$ a2ensite SOMEDOMAIN.COM
$ service apache2 reload
$ chown -R www-data.www-data /srv/www
$ chmod -R g+rwX /srv/www
$ chmod -R o-w /srv/www
$ vi /etc/group
    # add user to www-data group


# [[[ UBUNTU LINUX, INSTALL MYSQL & PHPMYADMIN ]]]
$ apt-get install mysql-server mysql-client libmysqlclient-dev phpmyadmin
    # DO NOT CONFIGURE APACHE AUTOMATICALLY
    # DO CONFIGURE DATABASE WITH DBCONFIG-COMMON


# [[[ APACHE & MYSQL, CONFIGURE PHPMYADMIN ]]]
$ mysql --user=root --password
    mysql> SHOW VARIABLES LIKE 'have_innodb';
    +---------------+-------+
    | Variable_name | Value |
    +---------------+-------+
    | have_innodb   | YES   |
    +---------------+-------+
$ vi /etc/apache2/sites-available/phpmyadmin.SOMEDOMAIN.COM.conf
    # SUBDOMAIN
    <VirtualHost *:80>
         ServerName phpmyadmin.SOMEDOMAIN.COM
         ServerAdmin webmaster@SOMEDOMAIN.COM
         DocumentRoot /srv/www/phpmyadmin.SOMEDOMAIN.COM/public_html/
         <Directory />  # required for Apache v2.4 in Ubuntu v14.04.pre
            Require all granted
         </Directory>
         ErrorLog /srv/www/phpmyadmin.SOMEDOMAIN.COM/logs/error.log
         CustomLog /srv/www/phpmyadmin.SOMEDOMAIN.COM/logs/access.log combined
    </VirtualHost>
$ mkdir -p /srv/www/phpmyadmin.SOMEDOMAIN.COM/logs;  ln -s /usr/share/phpmyadmin/ /srv/www/phpmyadmin.SOMEDOMAIN.COM/public_html
$ a2ensite phpmyadmin.SOMEDOMAIN.COM;  service apache2 reload
# FIX MISSING MCRYPT ERROR
$ updatedb
$ locate mcrypt.ini
$ locate mcrypt.so
$ vi /PATH_FROM_LOCATE_COMMAND/mcrypt.ini
    extension=/PATH_FROM_LOCATE_COMMAND/mcrypt.so
$ php5enmod mcrypt
$ service apache2 reload


# [[[ UBUNTU LINUX, INSTALL POSTFIX ]]]
# Outgoing E-Mail
$ apt-get install postfix
    # Internet Site config option
    # FQDN: MYSUBDOMAIN.SOMEDOMAIN.COM
$ vi /etc/postfix/main.cf
    myhostname = MYSUBDOMAIN.SOMEDOMAIN.COM
$ service postfix restart
$ telnet localhost 25
    HELO username
    MAIL FROM:somebody@mysubdomain.somedomain.com
    RCPT TO:real@external.email.com
    DATA
    Subject:Postfix Mail Server Test
    howdy howdy howdy
    .
    QUIT
# NEED FIX: Incoming E-Mail Not Yet Verified
# SET DNS MX RECORD
$ apt-get install mailutils
$ mail


# [[[ UBUNTU LINUX, INSTALL WEBMIN ]]]
$ vi /etc/apt/sources.list
    # WBRASWELL 201XYZZY 201X.YYZ: enable Webmin repo
    deb http://download.webmin.com/download/repository sarge contrib
$ wget -q http://www.webmin.com/jcameron-key.asc -O- | sudo apt-key add -  # NOTE HYPHEN AT END OF LINE
$ apt-get update
$ apt-get install webmin
# https://SOMEDOMAIN.COM:10000  # NOTE THE 's' IN 'https'


# [[[ UBUNTU LINUX, INSTALL NON-LATEST PERL CATALYST ]]]
# [[ DO NOT MIX WITH LATEST CATALYST FROM CPAN BELOW ]]
$ apt-get install libmodule-install-perl
$ apt-get install libcatalyst-engine-apache-perl
$ service apache2 restart
$ apt-get install libcatalyst-devel-perl
$ apt-get install libcatalyst-modules-perl


# [[[ UBUNTU LINUX, INSTALL PERL CPANM & LOCAL::LIB ]]]
# [[ YOU SHOULD USE THIS UNLESS YOU HAVE NO CHOICE ]]
# [[ DO NOT MIX WITH PERLBREW, BELOW ]]
# [[ COPIED FROM RPERL INSTALL DOC ]]
# ROOT
$ apt-get install curl
# NOT ROOT
$ curl -L cpanmin.us | perl - -l $HOME/perl5 App::cpanminus local::lib
$ echo 'eval $(perl -I$HOME/perl5/lib/perl5 -Mlocal::lib)' >> ~/.bashrc
$ source ~/.bashrc  # optionally logout & login
$ set | grep perl5
    # ensure the following 4 environmental variables are updated to include ~/perl5: 
    # PERL_MM_OPT, PERL_MB_OPT, PERL5LIB, PATH


# [[[ UBUNTU LINUX, INSTALL HAND-COMPILED PERL, OR PERLBREW & CPANMINUS ]]]
# [[ DO NOT USE THIS UNLESS YOU HAVE NO CHOICE!!! ]]
# [[ DO NOT MIX WITH LOCAL::LIB, ABOVE ]]
# [[ COPIED FROM RPERL INSTALL DOC ]]
$ wget http://www.cpan.org/src/5.0/perl-5.20.1.tar.bz2; bunzip2 perl-5.20.1.tar.bz2; cd perl-5.20.1; perl Makefile.PL; make; make test; make install
    # OR
$ sudo apt-get install perlbrew
    # OR
$ curl -L http://install.perlbrew.pl | bash
$ perlbrew init
$ perlbrew mirror  # Arlington, TX #222 http://mirror.uta.edu/CPAN/
$ echo 'source ~/perl5/perlbrew/etc/bashrc' >> ~/.bashrc
$ source ~/.bashrc; set | grep perl5
    # ensure the following 3 environmental variables are updated to include ~/perl5: 
    # PERLBREW_MANPATH, PERLBREW_PATH, PERLBREW_ROOT
$ perlbrew install perl-5.20.1
$ perlbrew use perl-5.20.1  # TEMPORARY
$ perlbrew switch perl-5.20.1  # PERMANENT
$ perlbrew install-cpanm


# [[[ PERL CATALYST, INSTALL TUTORIAL FROM CPAN ]]]
$ cpanm Template
$ cpanm Task::Catalyst::Tutorial
    # OR FOR FIREWALLED NETWORKS
$ cpanm --mirror http://cpan.msi.umn.edu/ Template
$ cpanm --mirror http://cpan.msi.umn.edu/ Task::Catalyst::Tutorial


# [[[ PERL CATALYST, CHECK VERSIONS ]]]
$ dpkg -p libcatalyst-perl
    # v5.90002 tutorial; v5.80022 Ubuntu v10.04.4; v5.90007 Ubuntu v12.04.3; v5.90007 Ubuntu v12.04.4; v5.90053 Ubuntu v14.04.1
$ perl -V
    # read list of @INC dirs
$ mkdir -p ANY_INC_DIRS_THAT_DO_NOT_YET_EXIST
$ perl -MCatalyst::Runtime\ 999
$ perl -MCatalyst::Devel\ 999
    # v1.34 tutorial; v1.36 Ubuntu v12.04.4; v1.39 Ubuntu v14.04.1
$ perl -MDBIx::Class\ 999
    # v0.08195 tutorial; v0.08196 Ubuntu v12.04.4; v0.08250 Ubuntu v14.04.1
$ perl -MCatalyst::Model::DBIC::Schema\ 999
    # v0.54 tutorial; v0.49 Ubuntu v12.04.4; v0.61 Ubuntu v14.04.1
$ perl -MHTML::FormFu\ 999
    # >= v0.09004; v0.09004 Ubuntu v12.04.4; v1.0 Ubuntu v14.04.1
$ perl -MTemplate\ 999
    # v2.22 Tutorial; v2.25 Ubuntu v12.04.4; v2.24 Ubuntu v14.04.1
$ perl -MDBD::mysql\ 999
    # >= v4.020; v4.020 Ubuntu v12.04.4; v4.025 ubuntu v14.04.1
$ perl -MTask::Catalyst::Tutorial\ 999
    # >= v0.06; v0.06 Ubuntu v12.04.4


# [[[ UBUNTU LINUX, INSTALL PERL CATALYST SHINYCMS PREREQUISITES ]]]
# [ Prerequisites: LAMP, mod_fastcgi OR mod_perl, Postfix ]
$ sudo apt-get install expat libexpat1-dev libxml2-dev zlib1g-dev
$ vi /etc/apt/sources.list
    # WBRASWELL 201XYZZY 201X.YYZ: enable FastCGI repo
    deb http://us.archive.ubuntu.com/ubuntu/ trusty multiverse
    deb-src http://us.archive.ubuntu.com/ubuntu/ trusty multiverse
$ apt-get update
$ apt-get -f install
$ apt-get install libapache2-mod-fastcgi


# [[[ PERL CATALYST, INSTALL SHINYCMS FROM GITHUB & LATEST CATALYST FROM CPAN ]]]
$ mysql --user=root --password  # required for DBD::mysql `make test`
    mysql> GRANT ALL PRIVILEGES ON test.* TO 'SOMEBODY'@'localhost' IDENTIFIED BY 'MYSQL_TEMP_PASSWORD';  # WRONGLY CREATES PASSWORD
    mysql> GRANT ALL PRIVILEGES ON test.* TO 'SOMEBODY'@'localhost';
    mysql> QUIT
$ cpanm DBD::mysql Devel::Declare::MethodInstaller::Simple Text::CSV_XS inc::Module::Install Module::Install::Catalyst Test::Pod Test::Pod::Coverage
$ mkdir ~/public_html; cd ~/public_html
$ git clone git@github.com:wbraswell/myshinytemplate.com.git myshinytemplate.com-latest
$ mv myshinytemplate.com-latest SOMEDOMAIN.COM-latest  # OR MANUALLY MERGE INTO EXISTING GIT REPO
$ cd SOMEDOMAIN.COM-latest; perl Makefile.PL; make; make test; make install  # DO NOT USE: CPANPLUS ERROR, USE FOLLOWING COMMANDS INSTEAD
$ cd SOMEDOMAIN.COM-latest; perl Makefile.PL
$ cpanm --installdeps .  # NOTE THE DOT AT THE END OF THIS COMMAND; RUN TWICE TO MAKE SURE ALL DEPENDENCIES ARE MET
# [ CREATE DATABASE & EDIT MYSHINYTEMPLATE FILES ]
$ mysql --user=root --password
    mysql> CREATE DATABASE SOMEDOMAIN_COM;
    mysql> GRANT ALL PRIVILEGES ON SOMEDOMAIN_COM.* TO 'SOME_MYSQL_USER'@'localhost' IDENTIFIED BY 'SOME_MYSQL_PASS';
    mysql> QUIT
$ rm modified/shinycms.conf; mv shinycms.conf.redacted modified/shinycms.conf; ln -s modified/shinycms.conf ./shinycms.conf
$ vi shinycms.conf
    name   ShinyCMS
    author SOME BODY <SOMEBODY@EXTERNALDOMAIN.COM>
    site_name    SOMEDOMAIN
    domain       SOMEDOMAIN.COM
    email_from   SOMEBODY@SOMEDOMAIN.COM
    ...
    <Model::DB>
            schema_class ShinyCMS::Schema
            <connect_info>
                    dsn        dbi:mysql:SOMEDOMAIN_COM
                    user       SOME_MYSQL_USER
                    password   SOME_MYSQL_PASS
                    ...
            </connect_info>
    </Model::DB>
$ make clean
$ grep -nr myshiny ./*
    # EDIT EVERY NON-SYMLINK FILE LISTED, SHOULD FOLLOW AS BELOW
    # replace both "myshinytemplate.com" & "myshinytemplate_com"; also "template_user" & "wbraswell"
    # :%s/myshinytemplate\.com/SOMEDOMAIN\.COM/g
    # :%s/myshinytemplate_com/SOMEDOMAIN_COM/g
    # :%s/MyShinyTemplate\.com/SOMEDOMAIN\.COM/g
    # :%s/template_user/SOME_MYSQL_USER/g
    # :%s/wbraswell/SOMEBODY/g
$ cd modified
$ vi README.md
$ vi external-fastcgi-server
$ vi fastcgi_start__myshinytemplate.com.sh
$ mv fastcgi_start__myshinytemplate.com.sh fastcgi_start__SOMEDOMAIN.COM.sh
$ vi fastcgi_myshinytemplate.com.conf
$ mv fastcgi_myshinytemplate.com.conf fastcgi_SOMEDOMAIN.COM.conf
$ vi fastcgi_myshinytemplate.com-init.d
$ mv fastcgi_myshinytemplate.com-init.d fastcgi_SOMEDOMAIN.COM-init.d
$ vi git_backup__myshinytemplate.com.sh
$ mv git_backup__myshinytemplate.com.sh git_backup__SOMEDOMAIN.COM.sh
$ vi git_merge_modified__myshinytemplate.com.sh
$ mv git_merge_modified__myshinytemplate.com.sh git_merge_modified__SOMEDOMAIN.COM.sh
$ vi mysqldump__myshinytemplate.com__no_user.sh.redacted  # DO NOT ADD PASSWORD HERE
$ mv mysqldump__myshinytemplate.com__no_user.sh.redacted mysqldump__SOMEDOMAIN.COM__no_user.sh.redacted
$ mkdir ~/bin; cp mysqldump__SOMEDOMAIN.COM__no_user.sh.redacted ~/bin/mysqldump__SOMEDOMAIN.COM__no_user.sh
$ vi ~/bin/mysqldump__SOMEDOMAIN.COM__no_user.sh  # ADD PASSWORD, USE SINGLE QUOTES IF SPECIAL CHARACTERS
$ ln -s ~/public_html/SOMEDOMAIN.COM-latest/modified/*.sh ~/bin
$ cd ..
$ rm backup/*.bz2
$ grep -nr myshiny ./*
$ grep -nr MyShiny ./*
    # ENSURE NO FILES REMAIN
$ find | grep myshiny
$ find | grep MyShiny
$ find | grep template_user
    # ENSURE NO FILES REMAIN
# [ BUILD DEMO DATA & RUN TESTS ]
$ ./bin/database/build-with-demo-data  # YES DEMO DATA, INCLUDING USER CREDENTIALS admin/changeme
$ export TEST_POD=1
$ perl Makefile.PL; make; make test
$ ./script/shinycms_server.pl
    # LOG IN AS ADMIN, CREDENTIALS admin/changeme
    # CHANGE ALL PASSWORDS NOW!!!
    # Admin area -> Users -> List users -> Change passwords for "admin" & "trevor" & "w1n5t0n"
# [ BACKUP & RESTORE DATABASE ]
$ mysqldump --user=SOME_MYSQL_USER --password='SOME_MYSQL_PASS' SOMEDOMAIN_COM --lock-all-tables --ignore-table=SOMEDOMAIN_COM.user > SOMEDOMAIN_COM__no_user.sql  # NO USER, BACKUP
$ mysql --user=root --password
    mysql> CREATE DATABASE SOMEDOMAIN_COM;  # NO USER, CREATE EMPTY DB TO RECEIVE RESTORE
    mysql> GRANT ALL PRIVILEGES ON SOMEDOMAIN_COM.* TO 'SOME_MYSQL_USER'@'localhost' IDENTIFIED BY 'SOME_MYSQL_PASS';
$ mysql --user=SOME_MYSQL_USER --password='SOME_MYSQL_PASS' SOMEDOMAIN_COM < SOMEDOMAIN_COM__no_user.sql  # NO USER TABLE, YES MYSQL USER, RESTORE 
# [ CONFIGURE APACHE MOD_FASTCGI ]
# [ YOU SHOULD USE THIS UNLESS YOU HAVE NO CHOICE ]
# [ DO NOT MIX WITH APACHE MOD_PERL, BELOW ]
$ cpanm FCGI FCGI::ProcManager  # NOT ROOT IF local::lib
$ a2enmod fastcgi
$ vi /etc/apache2/sites-available/SOMEDOMAIN.COM.conf
    <VirtualHost *:80>
        ServerName SOMEDOMAIN.COM
        ServerAlias www.SOMEDOMAIN.COM
        ServerAdmin webmaster@SOMEDOMAIN.COM
    #    DocumentRoot /srv/www/SOMEDOMAIN.COM/public_html/  # mod_fastcgi overrides below
        <Directory />  # required for Apache v2.4 in Ubuntu v14.04.pre
            Require all granted
        </Directory>
        ErrorLog /srv/www/SOMEDOMAIN.COM/logs/error.log
        CustomLog /srv/www/SOMEDOMAIN.COM/logs/access.log combined
    # MOD_FASTCGI
        DocumentRoot    /home/SOMEBODY/public_html/SOMEDOMAIN.COM-latest/root
        <Location />
            Order allow,deny
            Allow from all
        </Location>
        # Google Webmaster Tools, Robots Testing Tool 
        Alias    /googleSOMELONGNUMBER.html    /home/SOMEBODY/public_html/SOMEDOMAIN.COM-latest/root/googleSOMELONGNUMBER.html
        # Allow Apache to serve static content.
        Alias       /static     /home/SOMEBODY/public_html/SOMEDOMAIN.COM-latest/root/static
        <Location /static>  # UNNECESSARY???
            SetHandler          default-handler
        </Location>
        # Display friendly error page if the FastCGI process is not running.
        ErrorDocument   502     /home/SOMEBODY/public_html/SOMEDOMAIN.COM-latest/root/offline.html
        # Connect to the external server.
        FastCgiExternalServer   /tmp/SOMEDOMAIN.COM.fcgi -socket /tmp/SOMEDOMAIN.COM.socket -idle-timeout 900
        Alias           /       /tmp/SOMEDOMAIN.COM.fcgi/
    </VirtualHost>
$ cd /home/SOMEBODY/public_html/SOMEDOMAIN-latest
$ vi modified/offline.html
    <b>ERROR 502:</b> FastCGI Process Not Running, Please Inform Site Administrator <a href="mailto:SOMEBODY@SUBDOMAIN.SOMEDOMAIN.COM">ADMIN NAME</a>
# START FASTCGI SERVER, MANUAL
$ ~/bin/fastcgi_start__SOMEDOMAIN.COM.sh  # LOCAL::LIB, RUN AS USER SOMEBODY BY USER SOMEBODY, MUST HAVE CREATED SYMLINKS IN EDIT-MYSHINYTEMPLATE-FILES SECTION ABOVE
    # OR
$ sudo -Eu SOMEBODY /home/SOMEBODY/public_html/SOMEDOMAIN-latest/bin/external-fastcgi-server  # PERLBREW, RUN AS USER SOMEBODY BY USER root
$ cat /tmp/SOMEDOMAIN.COM.pid
# START FASTCGI SERVER, AUTOMATIC
$ ln -s /home/SOMEBODY/public_html/SOMEDOMAIN-latest/modified/fastcgi_SOMEDOMAIN.COM.conf /etc/init  # UPSTART, MOST MODERN LINUX DISTROS
$ initctl reload-configuration  # OR    $ reboot
$ initctl list | grep SOMEDOMAIN
$ service fastcgi_SOMEDOMAIN.COM start
$ service fastcgi_SOMEDOMAIN.COM status
    # OR
$ ln -s /home/SOMEBODY/public_html/SOMEDOMAIN-latest/modified/fastcgi_SOMEDOMAIN.COM-init.d /etc/init.d  # SYSV-INIT, OLDER LINUX DISTROS
$ reboot
# [ CONFIGURE APACHE MOD_PERL ]
# [ DO NOT USE THIS UNLESS YOU HAVE NO CHOICE ]
# [ DO NOT MIX WITH APACHE MOD_FASTCGI, ABOVE ]
$ vi /etc/apache2/sites-available/SOMEDOMAIN.COM.conf
    # DOMAIN
    <VirtualHost *:80>
        ServerName SOMEDOMAIN.COM
        ServerAlias www.SOMEDOMAIN.COM
        ServerAdmin webmaster@SOMEDOMAIN.COM
        DocumentRoot /srv/www/SOMEDOMAIN.COM/public_html/
        <Directory />  # required for Apache v2.4 in Ubuntu v14.04.pre
            Require all granted
        </Directory>
        # Google Webmaster Tools, Robots Testing Tool 
        Alias    /googleSOMELONGNUMBER.html    /home/SOMEBODY/public_html/SOMEDOMAIN.COM-latest/root/googleSOMELONGNUMBER.html
        ErrorLog /srv/www/SOMEDOMAIN.COM/logs/error.log
        CustomLog /srv/www/SOMEDOMAIN.COM/logs/access.log combined
        <Perl>
            use lib '/home/SOMEBODY/public_html/SOMEDOMAIN.COM-latest/lib';  # ShinyCMS
            use lib '/home/SOMEBODY/perl5/lib/perl5';  # local::lib
        </Perl>
    #   PerlRequire     /home/example.com/code/ShinyCMS/startup.pl  # handled by 'use lib' code above 
        PerlModule      ShinyCMS
        Alias   /static     /home/SOMEBODY/public_html/SOMEDOMAIN.COM-latest/root/static
        <Location />
            SetHandler          modperl 
            PerlResponseHandler +ShinyCMS
        </Location>
        <Location /static>  # UNNECESSARY???
            SetHandler  default-handler
        </Location>
    </VirtualHost>
        # OR
    # SUBDOMAIN
    <VirtualHost *:80>
        ServerName SUBDOMAIN.SOMEDOMAIN.COM
        ServerAdmin webmaster@SOMEDOMAIN.COM
        DocumentRoot /srv/www/SUBDOMAIN.SOMEDOMAIN.COM/public_html/
        <Directory />  # required for Apache v2.4 in Ubuntu v14.04.pre
            Require all granted
        </Directory>
        # Google Webmaster Tools, Robots Testing Tool 
        Alias    /googleSOMELONGNUMBER.html    /home/SOMEBODY/public_html/SUBDOMAIN.SOMEDOMAIN.COM-latest/root/googleSOMELONGNUMBER.html
        ErrorLog /srv/www/SUBDOMAIN.SOMEDOMAIN.COM/logs/error.log
        CustomLog /srv/www/SUBDOMAIN.SOMEDOMAIN.COM/logs/access.log combined
        <Perl>
            use lib '/home/SOMEBODY/public_html/SUBDOMAIN.SOMEDOMAIN.COM-latest/lib';  # ShinyCMS
            use lib '/home/SOMEBODY/perl5/lib/perl5';  # local::lib
        </Perl>
    #   PerlRequire     /home/SOMEBODY/public_html/SUBDOMAIN.SOMEDOMAIN.COM-latest/startup.pl  # handled by 'use lib' code above 
        PerlModule      ShinyCMS
        Alias   /static     /home/SOMEBODY/public_html/SUBDOMAIN.SOMEDOMAIN.COM-latest/root/static
        <Location />
            SetHandler          modperl 
            PerlResponseHandler +ShinyCMS
        </Location>
        <Location /static>  # UNNECESSARY???
            SetHandler  default-handler
        </Location>
    </VirtualHost>
# [ CREATE APACHE DIRECTORIES ]
$ mkdir -p /srv/www/SOMEDOMAIN.COM/public_html
$ mkdir /srv/www/SOMEDOMAIN.COM/logs
$ vi /srv/www/SOMEDOMAIN.COM/public_html/index.html  # create static test page
    SOMEDOMAIN.COM STATIC PAGE
$ a2ensite SOMEDOMAIN.COM
# [ CONFIGURE APACHE PERMISSIONS ]
$ vi /etc/group  # allow SOMEBODY user to modify permissions
    www-data:x:33:SOMEBODY
$ chown -R SOMEBODY:www-data /home/SOMEBODY/
$ chmod -R u+rwX,o+rX,o-w /home/SOMEBODY/public_html/SOMEDOMAIN-latest
$ chmod -R g+rwX /home/SOMEBODY/public_html/SOMEDOMAIN-latest/root/static/cms-uploads/
$ chmod -R g+rX /home/SOMEBODY/
$ service apache2 reload
# [ CONFIGURE SHINY ]
# http://phpmyadmin.SOMEDOMAIN.COM
    database "SOMEDOMAIN_COM"
    table "user" 
    change usernames "admin", "trevor" & "w1n5t0n"
# Shiny Login As New Admin User
# Admin area -> Users -> List Users -> Change Passwords For All 3 Users DOUBLE CHECK, SHOULD ALREADY BE DONE ABOVE
# Admin area -> Users -> List Users -> Edit All 3 Users -> Update E-Mail, etc.
# Admin area -> Pages -> List Form Handlers -> Edit Contact Form -> Update "E-mail To" Field
# Admin area -> Pages -> List Pages -> Edit Home -> Add Image "/static/cms-uploads/images/homepage_added.png" & "Lorem Ipsum Dolor" Text
# Admin area -> Pages -> List Templates -> Edit Homepage -> Delete "video_url" Element -> Update


# [[[ PERL CATALYST, INSTALL RAPIDAPP FROM GITHUB & LATEST CATALYST FROM CPAN ]]]
$ mkdir RapidApp-latest; git clone https://github.com/vanstyn/RapidApp.git RapidApp-latest  # NO MAKEFILE ON GITHUB, CAN'T MAKE OR INSTALL!
    # OR
$ mysql --user=root --password  # required for DBD::mysql `make test` 
    mysql> GRANT ALL PRIVILEGES ON test.* TO 'SOMEBODY'@'localhost';
$ cpanm DBD::mysql MooseX::NonMoose RapidApp
$ mkdir ~/public_html; cd ~/public_html
$ rapidapp.pl --helpers RapidDbic,Templates,TabGui,AuthCore,NavCore RapidApp_phpmyadmin_database -- --dsn dbi:mysql:database=phpmyadmin,root,'ROOTPASS'
$ cd RapidApp_phpmyadmin_database; perl Makefile.PL; make; make test
$ ~/public_html/RapidApp_phpmyadmin_database/script/rapidapp_phpmyadmin_database_server.pl  # admin, pass
# BlueBox demo app
$ cd; mkdir BlueBox-latest; git clone https://github.com/vanstyn/BlueBox.git BlueBox-latest
$ cd BlueBox-latest; perl Makefile.PL; cpanm --installdeps .  # NO MAKE OR TEST
$ script/bluebox_server.pl  # admin/pass
